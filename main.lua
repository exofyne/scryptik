-- –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π "Trade request sent" –∏ "Trade completed"
-- –í—Å—Ç–∞–≤—å—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (F9 -> Console)

print("üîç –ò—â–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ç—Ä–µ–π–¥–µ...")
print("=====================================")

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤–æ –≤—Å–µ—Ö GUI
local function findTextInGUI(parent, searchText, path)
    path = path or ""
    
    for _, child in pairs(parent:GetChildren()) do
        local currentPath = path .. "." .. child.Name
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
        if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("TextBox") then
            if child.Text and (string.find(string.lower(child.Text), string.lower(searchText)) or 
                              string.find(string.lower(child.Text), "trade") or
                              string.find(string.lower(child.Text), "request") or
                              string.find(string.lower(child.Text), "sent") or
                              string.find(string.lower(child.Text), "completed")) then
                print("üìç –ù–ê–ô–î–ï–ù: " .. currentPath)
                print("   –¢–µ–∫—Å—Ç: '" .. child.Text .. "'")
                print("   –ü–æ–ª–Ω—ã–π –ø—É—Ç—å: " .. parent.Name .. currentPath)
                print("   ---")
            end
        end
        
        -- –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–∞—Ö
        if #child:GetChildren() > 0 then
            findTextInGUI(child, searchText, currentPath)
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–æ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
local function searchEverywhere()
    local places = {
        {name = "PlayerGui", location = game:GetService("Players").LocalPlayer.PlayerGui},
        {name = "StarterGui", location = game:GetService("StarterGui")},
        {name = "ReplicatedStorage", location = game:GetService("ReplicatedStorage")},
        {name = "Workspace", location = game:GetService("Workspace")},
        {name = "ServerStorage", location = game:GetService("ServerStorage")}, -- –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
    }
    
    for _, place in pairs(places) do
        print("üîç –ò—â–µ–º –≤: " .. place.name)
        local success, error = pcall(function()
            findTextInGUI(place.location, "trade")
        end)
        if not success then
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤ " .. place.name .. ": " .. tostring(error))
        end
        print("")
    end
end

-- –ü–æ–∏—Å–∫ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
local function findSpecificNotifications()
    print("üéØ –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...")
    
    local keywords = {"sent", "completed", "request", "trade", "—É—Å–ø–µ—à–Ω–æ", "–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω", "–∑–∞–≤–µ—Ä—à–µ–Ω"}
    
    local function searchInService(service, serviceName)
        print("–ò—â–µ–º –≤ " .. serviceName .. ":")
        for _, obj in pairs(service:GetDescendants()) do
            if obj:IsA("TextLabel") or obj:IsA("TextButton") or obj:IsA("TextBox") then
                for _, keyword in pairs(keywords) do
                    if obj.Text and string.find(string.lower(obj.Text), keyword) then
                        print("  ‚úÖ " .. obj:GetFullName())
                        print("     –¢–µ–∫—Å—Ç: '" .. obj.Text .. "'")
                    end
                end
            end
        end
    end
    
    searchInService(game:GetService("Players").LocalPlayer.PlayerGui, "PlayerGui")
    searchInService(game:GetService("StarterGui"), "StarterGui")
    
    local success, _ = pcall(function()
        searchInService(game:GetService("ReplicatedStorage"), "ReplicatedStorage")
    end)
end

-- –ü–æ–∏—Å–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–º–æ–≥—É—Ç –±—ã—Ç—å –≤ CoreGui)
local function findCoreGuiNotifications()
    print("üîç –ò—â–µ–º –≤ CoreGui (—Å–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)...")
    local success, error = pcall(function()
        local coreGui = game:GetService("CoreGui")
        for _, obj in pairs(coreGui:GetDescendants()) do
            if obj:IsA("TextLabel") and obj.Text and 
               (string.find(string.lower(obj.Text), "trade") or 
                string.find(string.lower(obj.Text), "request") or
                string.find(string.lower(obj.Text), "sent") or
                string.find(string.lower(obj.Text), "completed")) then
                print("  ‚úÖ CoreGui: " .. obj:GetFullName())
                print("     –¢–µ–∫—Å—Ç: '" .. obj.Text .. "'")
            end
        end
    end)
    if not success then
        print("‚ùå CoreGui –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: " .. tostring(error))
    end
end

-- –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –ø–æ–∏—Å–∫–∏
searchEverywhere()
findSpecificNotifications()
findCoreGuiNotifications()

print("=====================================")
print("üéØ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Å—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞:")
print("1. game:GetService(\"Players\").LocalPlayer.PlayerGui")
print("2. game:GetService(\"StarterGui\")")  
print("3. game:GetService(\"CoreGui\") - —Å–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
print("4. –ú–æ–≥—É—Ç –±—ã—Ç—å –≤ TweenService –∞–Ω–∏–º–∞—Ü–∏—è—Ö")
print("5. –ú–æ–≥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ RemoteEvents")

print("\nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ç–∞–∫–∂–µ:")
print("- –°–¥–µ–ª–∞—Ç—å —Ç—Ä–µ–π–¥ –∏ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç")
print("- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å game:GetService(\"SoundService\") –¥–ª—è –∑–≤—É–∫–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")

-- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–æ–≤—ã—Ö GUI —ç–ª–µ–º–µ–Ω—Ç–æ–≤
print("\nüîÑ –ó–∞–ø—É—Å–∫–∞—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–æ–≤—ã—Ö GUI...")
local monitoredServices = {game:GetService("Players").LocalPlayer.PlayerGui, game:GetService("StarterGui")}

for _, service in pairs(monitoredServices) do
    service.ChildAdded:Connect(function(child)
        wait(0.1) -- –Ω–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã GUI —É—Å–ø–µ–ª –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è
        print("üÜï –ù–æ–≤—ã–π GUI: " .. child.Name)
        findTextInGUI(child, "trade", "")
    end)
end

print("‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Ç—Ä–µ–π–¥ —Å–µ–π—á–∞—Å.")
